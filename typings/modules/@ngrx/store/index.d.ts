// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/dispatcher.d.ts
declare module '~@ngrx/store/dispatcher' {
import { SyncSubject } from '@ngrx/core/SyncSubject';
export interface Action {
    type: string;
    payload?: any;
}
export class Dispatcher extends SyncSubject<Action> {
    static INIT: string;
    constructor();
    dispatch(action: Action): void;
    complete(): void;
}
}
declare module '@ngrx/store/dispatcher' {
export * from '~@ngrx/store/dispatcher';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/ng2.d.ts
declare module '~@ngrx/store/ng2' {
export const INITIAL_REDUCER: String;
export const INITIAL_STATE: String;
export function provideStore(reducer: any, initialState?: any): any[];
}
declare module '@ngrx/store/ng2' {
export * from '~@ngrx/store/ng2';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/reducer.d.ts
declare module '~@ngrx/store/reducer' {
import { SyncSubject } from '@ngrx/core/SyncSubject';
import { Dispatcher, Action } from '~@ngrx/store/dispatcher';
export interface ActionReducer<T> {
    (state: T, action: Action): T;
}
export class Reducer extends SyncSubject<ActionReducer<any>> {
    private _dispatcher;
    static REPLACE: string;
    constructor(_dispatcher: Dispatcher, initialReducer: ActionReducer<any>);
    replaceReducer(reducer: ActionReducer<any>): void;
}
}
declare module '@ngrx/store/reducer' {
export * from '~@ngrx/store/reducer';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/state.d.ts
declare module '~@ngrx/store/state' {
import { SyncSubject } from '@ngrx/core/SyncSubject';
import { Dispatcher } from '~@ngrx/store/dispatcher';
import { Reducer } from '~@ngrx/store/reducer';
export class State<T> extends SyncSubject<T> {
    constructor(_initialState: T, action$: Dispatcher, reducer$: Reducer);
}
}
declare module '@ngrx/store/state' {
export * from '~@ngrx/store/state';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/store.d.ts
declare module '~@ngrx/store/store' {
import { SyncSubject } from '@ngrx/core/SyncSubject';
import { SelectSignature } from '@ngrx/core/operator/select';
import { Dispatcher, Action } from '~@ngrx/store/dispatcher';
import { State } from '~@ngrx/store/state';
import { Reducer, ActionReducer } from '~@ngrx/store/reducer';
export class Store<T> extends SyncSubject<T> {
    private _dispatcher;
    private _reducer;
    constructor(_dispatcher: Dispatcher, _reducer: Reducer, state$: State<T>, initialState: T);
    select: SelectSignature<T>;
    replaceReducer(reducer: ActionReducer<any>): void;
    dispatch(action: Action): void;
    next(action: any): void;
    error(err: any): void;
    complete(): void;
}
}
declare module '@ngrx/store/store' {
export * from '~@ngrx/store/store';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/utils.d.ts
declare module '~@ngrx/store/utils' {
import { ActionReducer } from '~@ngrx/store/reducer';
export function combineReducers(reducers: any): ActionReducer<any>;
}
declare module '@ngrx/store/utils' {
export * from '~@ngrx/store/utils';
}

// Generated by typings
// Source: jspm_packages/npm/@ngrx/store@2.0.1/index.d.ts
declare module '~@ngrx/store/index' {
export * from '~@ngrx/store/dispatcher';
export * from '~@ngrx/store/ng2';
export * from '~@ngrx/store/reducer';
export * from '~@ngrx/store/state';
export * from '~@ngrx/store/store';
export * from '~@ngrx/store/utils';
}
declare module '@ngrx/store/index' {
export * from '~@ngrx/store/index';
}
declare module '@ngrx/store' {
export * from '~@ngrx/store/index';
}
